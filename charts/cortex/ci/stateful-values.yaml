ingress:
  enabled: false

config:
  ingester:
    lifecycler:
      join_after: 30s
      final_sleep: 30s
      tokens_file_path: "/data/tokens"
      ring:
        replication_factor: 1
        kvstore:
          store: "memberlist"
    walconfig:
      wal_enabled: true
      recover_from_wal: true
      wal_dir: "/data/wal"

  # See https://github.com/cortexproject/cortex/blob/master/docs/configuration/config-file-reference.md#storage_config
  storage:
    engine: blocks
  blocks_storage:
    backend: "filesystem"
    s3:  # Ruler and alertmanager seems to need this
      endpoint: minio.default.svc:9000
      bucket_name: cortex
      secret_access_key: '3P1yXv2bnVjKx8yaLvXkcCRje0tK9rONFWRxB1gZ'
      access_key_id: 'ssRtFvgGMdtc2b8vcPZ4'
      insecure: true
    tsdb:
      dir: "/data/tsdb"
    bucket_store:
      sync_dir: "/data/tsdb-sync"
    filesystem:
      dir: "/data/store"

  distributor:
    ring:
      kvstore:
        store: memberlist

  ruler:
    ring:
      kvstore:
        store: memberlist

  memberlist:
    join_members:
    - "{{ .Release.Name }}-ingester"

ingester:
  replicas: 1
  statefulSet:
    enabled: true
distributor:
  replicas: 1
nginx:
  replicas: 1
consul:
  enabled: false

memcached:
  replicaCount: 1
  resources: null
  metrics:
    enabled: false

memcached-index-read:
  replicaCount: 1
  resources: null
  metrics:
    enabled: false

memcached-index-write:
  replicaCount: 1
  resources: null
  metrics:
    enabled: false

memcached-frontend:
  replicaCount: 1
  resources: null
  metrics:
    enabled: false

memcached-index:
  replicaCount: 1
  resources: null
  metrics:
    enabled: false

memcached-chunks:
  replicaCount: 1
  resources: null
  metrics:
    enabled: false

memcached-metadata:
  replicaCount: 1
  resources: null
  metrics:
    enabled: false
